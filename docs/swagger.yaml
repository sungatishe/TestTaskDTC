definitions:
  handlers.AuthData:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handlers.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  handlers.RegisterData:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  models.Order:
    description: Order struct
    properties:
      customer_name:
        example: John Doe
        type: string
      product_id:
        example: 1
        type: integer
      status:
        example: pending
        type: string
      total_price:
        example: 100.5
        type: number
    type: object
  models.Product:
    properties:
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Logs in a user and returns a JWT token
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.AuthData'
      produces:
      - application/json
      responses:
        "200":
          description: 'Token: {token}'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid login data
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Log in a user
      tags:
      - auth
  /orders:
    get:
      consumes:
      - application/json
      description: Get all orders or filter them by status, min price, and max price
      parameters:
      - description: Order status
        in: query
        name: status
        type: string
      - description: Minimum order price
        in: query
        name: min_price
        type: number
      - description: Maximum order price
        in: query
        name: max_price
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: List of orders
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "400":
          description: Invalid filter parameters
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get orders by filters
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new order by providing order data
      parameters:
      - description: Order data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new order
      tags:
      - orders
  /orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an order by providing order ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Order deleted successfully
        "400":
          description: Invalid order ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete an order
      tags:
      - orders
    get:
      consumes:
      - application/json
      description: Get a specific order by providing the order ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Order details
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid order ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get an order by ID
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: Update an existing order by providing order data
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated order data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: Order updated successfully
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid order ID or data
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing order
      tags:
      - orders
  /products:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all products
      produces:
      - application/json
      responses:
        "200":
          description: List of all products
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product by providing product data
      parameters:
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Product successfully created
          schema:
            type: string
        "400":
          description: Invalid product data
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by providing product ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Product successfully deleted
          schema:
            type: string
        "400":
          description: Invalid product ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Product not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get a specific product by providing the product ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Product details
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Invalid product ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Product not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update an existing product by providing product data
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: Product successfully updated
          schema:
            type: string
        "400":
          description: Invalid product ID or data
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing product
      tags:
      - products
  /register:
    post:
      consumes:
      - application/json
      description: Registers a new user by providing user data
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterData'
      produces:
      - application/json
      responses:
        "201":
          description: User successfully registered
          schema:
            type: string
        "400":
          description: Invalid user data
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    description: API Key authorization
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
